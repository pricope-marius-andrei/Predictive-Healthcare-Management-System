name: Build and deploy ASP.Net Core app to Azure Web App - Predictive-Healthcare-Management-SystemApi

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1'

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ./Predictive-Healthcare-Management-System

      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/Predictive-Healthcare-Management-System"
        working-directory: ./Predictive-Healthcare-Management-System

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/Predictive-Healthcare-Management-System

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Predictive-Healthcare-Management-SystemApi'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AA2A8CCCA096427282F4D93457D87619 }}

      - name: Install dotnet-ef CLI tool
        run: |
          dotnet tool install --global dotnet-ef
      
      - name: Install PostgreSQL client tools
        run: |
          choco install postgresql -y 

      - name: Drop and recreate database
        run: |
          # Extract database connection details from DB_CONNECTION_STRING
          $DB_CONNECTION_STRING = $env:DB_CONNECTION_STRING
      
          # Extract the host, user, password, and database name from the connection string
          $DB_HOST = ($DB_CONNECTION_STRING -replace '^postgresql://([^:]+):([^@]+)@([^:]+):([^/]+)/(.*)', '$3')
          $DB_USER = ($DB_CONNECTION_STRING -replace '^postgresql://([^:]+):([^@]+)@([^:]+):([^/]+)/(.*)', '$1')
          $DB_PASSWORD = ($DB_CONNECTION_STRING -replace '^postgresql://([^:]+):([^@]+)@([^:]+):([^/]+)/(.*)', '$2')
          $DB_NAME = ($DB_CONNECTION_STRING -replace '^postgresql://([^:]+):([^@]+)@([^:]+):([^/]+)/(.*)', '$4')
          $DB_PORT = 5432  # Default port for PostgreSQL
      
          # Drop and recreate the database
          $env:PGPASSWORD = $DB_PASSWORD
          psql -h $DB_HOST -U $DB_USER -p $DB_PORT -c "DROP DATABASE IF EXISTS $DB_NAME;"
          psql -h $DB_HOST -U $DB_USER -p $DB_PORT -c "CREATE DATABASE $DB_NAME;"
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}


        
      - name: Apply migrations
        run: |
          # Specify the full path to the csproj file if needed
          dotnet ef database update --connection "${{ secrets.DB_CONNECTION_STRING }}" --project Predictive-Healthcare-Management-System/Predictive-Healthcare-Management-System.csproj 
